import random
from generador import generar_arreglo
from graficador import graficar
from algoritmos.busqueda_lineal import BusquedaLineal
from algoritmos.busqueda_binaria import BusquedaBinaria
from algoritmos.busqueda_ternaria import BusquedaTernaria
from algoritmos.busqueda_saltos import BusquedaPorSaltos

# Configura los l√≠mites de tama√±o para ejecutar ciertos algoritmos
LIMITES = {
    "Lineal": 100_000,   # hasta 100 mil
    "Binaria": 1_000_000,
    "Ternaria": 1_000_000,
    "Saltos": 1_000_000
}

def ejecutar_busquedas(arreglo, objetivo, tama√±o):
    resultados = {}

    print("\nüîç Ejecutando b√∫squedas...")

    if tama√±o <= LIMITES["Lineal"]:
        print("‚è≥ Ejecutando b√∫squeda lineal...")
        _, t = BusquedaLineal.buscar(arreglo, objetivo)
        print(f"‚úÖ Resultado Lineal: {t:.8f} segundos")
        resultados["Lineal"] = t
    else:
        print("‚õî B√∫squeda lineal omitida (tama√±o muy grande)")

    print("‚è≥ Ejecutando b√∫squeda binaria...")
    _, t = BusquedaBinaria.buscar(arreglo, objetivo)
    print(f"‚úÖ Resultado Binaria: {t:.8f} segundos")
    resultados["Binaria"] = t

    print("‚è≥ Ejecutando b√∫squeda ternaria...")
    _, t = BusquedaTernaria.buscar(arreglo, objetivo)
    print(f"‚úÖ Resultado Ternaria: {t:.8f} segundos")
    resultados["Ternaria"] = t

    print("‚è≥ Ejecutando b√∫squeda por saltos...")
    _, t = BusquedaPorSaltos.buscar(arreglo, objetivo)
    print(f"‚úÖ Resultado Saltos: {t:.8f} segundos")
    resultados["Saltos"] = t

    return resultados

if __name__ == "__main__":
    for tama√±o in [10_000, 100_000, 1_000_000]:
        print(f"\nüì¶ Generando arreglo de tama√±o {tama√±o}...")
        arreglo = generar_arreglo(tama√±o)
        objetivo = arreglo[random.randint(0, tama√±o - 1)]
        print(f"üéØ Elemento a buscar: {objetivo}")

        resultados = ejecutar_busquedas(arreglo, objetivo, tama√±o)

        print(f"\nüìä Resultados para tama√±o {tama√±o}:")
        for nombre, tiempo in resultados.items():
            print(f"üîπ {nombre}: {tiempo:.8f} segundos")

        graficar(resultados, tama√±o)

